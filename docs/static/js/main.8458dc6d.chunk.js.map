{"version":3,"sources":["context/Context.js","helpers/pokemon_storage.js","helpers/urlToId.js","helpers/placeDataEvolution.js","components/ui/TableInfo.js","components/ui/Tags.js","icons/arrow_right.svg","components/ui/Evolution.js","components/content/PokemonModal.js","components/content/Element.js","components/content/Content.js","helpers/requestFilters.js","helpers/useFetch.js","components/filters/Colors.js","components/filters/Filters.js","views/principal/Principal.js","icons/logo.svg","icons/search.svg","components/navbar/Search.js","components/navbar/NavbarComponent.js","components/router/AppRouter.js","helpers/initialPokemons.js","helpers/reducer.js","App.js","index.js"],"names":["pokemonContext","createContext","pokemon_entries","JSON","parse","localStorage","getItem","pokemons_species","urlToId","url","split","slice","placeDataEvolutions","chain","evolutions","key","evolve","evolve2","idEvolve2","id","name","idEvolve","TableInfo","cells","Table","bordered","hover","striped","map","i","title","Tags","tags","type","Badge","pill","variant","className","Evolution","length","Col","xs","sm","md","alt","src","style","width","arrow","PokemonModal","state","modal","idPok","table","onHide","Modal","show","aria-labelledby","size","centered","Body","Row","margin","borderTop","Element","data","useState","altura","peso","genero","habitat","color","setState","handleModal","a","fetch","resp","json","height","weight","types","resp2","gender_rate","evolution_chain","resp3","sort","b","useEffect","digits","Card","cursor","onClick","Img","Footer","Title","Content","useContext","dispatch","handleClick","pokemons","console","log","index","pokemon_species","payload","pokemon","span","offset","Button","requestFilters","by","destruc","proper","flag","setFirstFilter","process","pokemonBy","pok","filters","useFetch","isMounted","useRef","loading","error","current","then","res","catch","Colors","firstFilter","handleColor","e","target","results","backgroundColor","Filters","typeForm","handleCheck","Form","Check","onChange","label","Principal","Container","Search","href","onBlur","value","preventDefault","search","placeholder","NavbarComponent","Navbar","expand","Brand","logo","Collapse","AppRouter","exact","path","component","initialPokemons","Array","isArray","reducer","action","initial","foundPokemon","filter","Object","values","some","val","includes","v","findIndex","t","init","App","useReducer","setItem","stringify","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8458dc6d.chunk.js","sourcesContent":["import react, { createContext } from 'react'\r\n\r\nexport const pokemonContext = createContext();","export const { pokemon_entries } =  JSON.parse(localStorage.getItem('pokemons')) || [ { pokemons_species: [] } ] \r\n        \r\n   ","export const urlToId = (url) => {\r\n    const id = url.split(\"/\");\r\n    const digits = (\"00\" + id[6]).slice(-3)\r\n\r\n    return digits;\r\n}\r\n","import { urlToId } from \"../helpers/urlToId\";\r\n\r\n\r\nexport const placeDataEvolutions = (chain) => {\r\n    let evolutions = [  ]\r\n    for (const key in chain) {\r\n      if( key === \"evolves_to\" ){\r\n        for (const evolve in chain[key][0]) {\r\n          if ( evolve === \"evolves_to\" ){\r\n            \r\n            for (const evolve2 in chain[key][0][evolve][0]) {\r\n              \r\n              evolve2 === \"species\" && ( () => {\r\n                const idEvolve2 = urlToId( chain[key][0][evolve][0][evolve2].url )\r\n                evolutions = [ ...evolutions, { id: idEvolve2, name: chain[key][0][evolve][0][evolve2].name }] \r\n              })()\r\n            }\r\n\r\n          } else if( evolve === \"species\" ){\r\n\r\n            const idEvolve = urlToId(chain[key][0][evolve].url)\r\n            evolutions = [ ...evolutions, { id: idEvolve, name: chain[key][0][evolve].name} ]\r\n\r\n          }\r\n        }\r\n      }else if ( key === \"species\" ) {\r\n        const id = urlToId(chain[key].url)\r\n        evolutions = [ ...evolutions, { id: id, name: chain[key].name } ]\r\n      }\r\n    }\r\n\r\n    return evolutions;\r\n}","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nexport const TableInfo = ({ cells }) => {\r\n  return (\r\n    <Table bordered hover striped>\r\n      <tbody>\r\n        {cells.map(( { title, name }, i) => (\r\n          <tr key={ `cells-${ name }-${i}` }>\r\n            <td>{title}</td>\r\n            <td>{name}</td>\r\n          </tr>        \r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nexport const Tags = ({ tags }) => {\r\n  return (\r\n    <>\r\n      {tags.map(( { type:{name} } ) => (\r\n        <Badge key={`tag-${name}`} pill variant=\"info\" className=\"mr-2\">\r\n          {name}\r\n        </Badge>        \r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/arrow_right.88cab351.svg\";","import React, { Fragment } from 'react'\r\nimport { Col } from 'react-bootstrap'\r\nimport arrow from '../../icons/arrow_right.svg'\r\n\r\nexport const Evolution = ({ evolutions }) => {\r\n    return (\r\n        <>\r\n        {\r\n            evolutions.length !== 0 ? evolutions.map( ( {id, name}, i ) => (\r\n                <Fragment key={ `evol-${id}` }>\r\n                    <Col  xs={12} sm={12} md={2} >\r\n                        <img alt=\"evolucion 1\" src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${id}.png`} style={{ width: '100%' }} />\r\n                        <p className=\"text-center\">{ name }</p>\r\n                    </Col>\r\n                    {\r\n                        i !== evolutions.length - 1 &&\r\n                        <Col className=\"d-flex align-center justify-content-center\" xs={12} sm={12} md={2} >\r\n                            <img alt=\"arrow-right\" src={arrow} />\r\n                        </Col>                    \r\n                    }\r\n                </Fragment>\r\n            ) ): <p>El pokemon no tiene evolución</p>\r\n        }\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Col, Modal, Row } from \"react-bootstrap\";\r\nimport { TableInfo } from \"../ui/TableInfo\";\r\nimport { Tags } from \"../ui/Tags\";\r\nimport { Evolution } from \"../ui/Evolution\";\r\n\r\nexport const PokemonModal = ({\r\n  state: { modal, name, idPok, table, tags, evolutions=[] },\r\n  onHide,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      show={modal}\r\n      onHide={onHide}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      size=\"xl\"\r\n      centered\r\n    >\r\n      <Modal.Body>\r\n        <Row style={{ margin: \"1rem\" }}>\r\n          <Col md={6} className=\"align-self-center\">\r\n            <img\r\n              alt=\"imagen de pokemon\"\r\n              src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${idPok}.png`}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <h4>{`${name} ${idPok} `}</h4>\r\n\r\n            <p>descripttion</p>\r\n\r\n            <TableInfo cells={table} />\r\n\r\n            <h5>Tipos</h5>\r\n            <Tags tags={tags} />\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ borderTop: \"2px solid gray\", margin: \"2rem\" }}>\r\n            <div className=\"w-100\">  \r\n                <h5>Evolución</h5>\r\n                {\r\n                  evolutions.length !== 1  ? <div className=\"d-flex justify-content-center\">\r\n                    <Evolution evolutions={evolutions} />\r\n                  </div>:\r\n                  <p>No tiene evolución</p>\r\n                }\r\n                \r\n            </div>\r\n        </Row>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { placeDataEvolutions } from \"../../helpers/placeDataEvolution\";\r\nimport { urlToId } from \"../../helpers/urlToId\";\r\nimport { PokemonModal } from \"./PokemonModal\";\r\n\r\nimport \"./Element.css\"\r\n\r\nexport const Element = ({ data: { name, url } }) => {\r\n  const [ state, setState] = useState({\r\n    modal: false,\r\n    idPok: \"000\",\r\n    name: name,\r\n    table: {\r\n      altura: \"\",\r\n      peso: \"\",\r\n      genero: \"\",\r\n      habitat: \"\",\r\n      color:\"\"\r\n    },\r\n    tags: [],\r\n    evolutions: {}\r\n  });\r\n  const handleModal = async () => {\r\n    const resp = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n    const { height, weight, types  } = await resp.json()\r\n\r\n    const resp2 = await fetch(`https://pokeapi.co/api/v2/pokemon-species/${name}`);\r\n    const { habitat, color, gender_rate, evolution_chain } = await resp2.json();\r\n    \r\n    const resp3 = await fetch(evolution_chain.url);\r\n    const { chain } = await resp3.json();\r\n\r\n    const evolutions = placeDataEvolutions(chain);\r\n\r\n    setState({\r\n      ...state,\r\n        modal: !state.modal,\r\n        table: [\r\n          {\r\n            title: \"altura\",\r\n            name: height\r\n          },\r\n          {\r\n            title: \"peso\",\r\n            name: weight\r\n          },\r\n          {\r\n            title: \"genero\",\r\n            name: gender_rate === 1 ? \"masculino - femenino\" : \"sin genero\",\r\n          },\r\n          {\r\n            title: \"habitat\",\r\n            name: habitat !== null && [ ...habitat[\"name\"] ]\r\n          },\r\n          {\r\n            title: \"color\",\r\n            name: [ ...color[\"name\"] ]\r\n          },\r\n\r\n        ],     \r\n         tags: [ ...types ],\r\n         evolutions: evolutions.sort( (a,b) => ( a.id - b.id ))\r\n    })\r\n  };\r\n\r\n  useEffect( () => {\r\n    const digits = urlToId(url)\r\n    \r\n      setState({\r\n        ...state,\r\n        idPok: digits\r\n      })\r\n    \r\n  }, [ name ] )\r\n\r\n  return (\r\n    <>    \r\n      <PokemonModal state={state} onHide={handleModal} />\r\n\r\n      <Card\r\n        style={{ width: \"100%\", cursor: \"pointer\" }}\r\n        onClick={handleModal}\r\n        // border=\"info\"\r\n      >\r\n          <Card.Img src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${state.idPok}.png`} alt=\"Card imagen\" />\r\n        <Card.Footer>\r\n          <Card.Title className=\"text-center mb-0\">{ name }</Card.Title>           \r\n        </Card.Footer>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Row, Col, Button } from \"react-bootstrap\";\r\nimport { pokemonContext } from \"../../context/Context\";\r\nimport { pokemon_entries } from \"../../helpers/pokemon_storage\";\r\nimport { Element } from './Element';\r\n\r\nexport const Content = () => {  \r\n\r\n  // const [state, dispatch] = useReducer(reducer, [], init)\r\n  const { state, dispatch } = useContext(pokemonContext);\r\n  \r\n  const handleClick = async () => {\r\n\r\n    let pokemons = []\r\n\r\n    console.log( pokemon_entries   );\r\n\r\n    for (let index = state.length; index < state.length + 20; index++){\r\n      pokemons = [ ...pokemons, pokemon_entries[index].pokemon_species ]\r\n    }\r\n\r\n    dispatch({\r\n      type: \"load\",\r\n      payload: {\r\n        pokemons: pokemons\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Row>\r\n      {/* {\r\n        loading && <h3>Cargando...</h3>\r\n      } */}      \r\n        {          \r\n          state.length !== 0 ? state.map( (pokemon, i) => (                      \r\n              <Col key={`el-${i}`} xs={6} md={4} className=\"mt-3\" >\r\n                <Element data={ pokemon }/>\r\n              </Col>            \r\n          )): <p className=\"m-4\" >No se encuetran pokemons</p>\r\n        }   \r\n    </Row>\r\n    <Row>\r\n      {\r\n        state.length < 800 &&\r\n        <Col className=\"mt-3\" md={{ span: 5, offset: 5 }}>\r\n          <Button variant=\"primary\" onClick={ handleClick }>\r\n            Ver más\r\n          </Button>\r\n        </Col> \r\n      }\r\n    </Row>\r\n    </>\r\n  );\r\n};\r\n","\r\nexport const requestFilters = async ( dispatch, { by, id, destruc, proper = null, flag, setFirstFilter } ) => {\r\n\r\n    const resp = await fetch(`${process.env.REACT_APP_POKEMON_ENDPOINT}/${by}/${id}`);\r\n    const json = await resp.json();\r\n    \r\n    if( json[destruc].length !== 0 ){\r\n      \r\n      let pokemonBy = []\r\n      json[ destruc ].map( (pok) => { \r\n        proper !== null ?        \r\n        pokemonBy = [ ...pokemonBy, pok[proper] ] :\r\n        pokemonBy = [ ...pokemonBy, pok] ;\r\n\r\n      } )\r\n\r\n      setFirstFilter( flag + 1 )\r\n\r\n      dispatch({\r\n        type: 'filter',\r\n        payload: {\r\n          filters: pokemonBy,\r\n          flag: flag\r\n        }\r\n      })\r\n    }      \r\n}","import { useEffect, useRef, useState } from \"react\"\r\n\r\nexport const useFetch = ( url ) => {\r\n    \r\n    //si se desmonta un componente antes de que se ejecute un setter de un estado, lanzara errores\r\n    // para solucionar el problema se utiliza un useRef\r\n    const isMounted = useRef(true);\r\n    \r\n    const [state, setState] = useState({ data: null, loading: true, error: null });\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        setState({\r\n            loading: true,\r\n            error: null,\r\n            data: null,\r\n            offset: 0\r\n        });\r\n\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then( data => {\r\n\r\n            // setTimeout( () =>{\r\n\r\n                if( isMounted.current ){\r\n                    setState({\r\n                        loading: false,\r\n                        error: null,\r\n                        data: data,\r\n                        offset: 0\r\n                    });\r\n                } else {\r\n                    console.log('setState no se llamó')\r\n                }\r\n                \r\n            // }, 4000 )\r\n            \r\n\r\n        })\r\n        .catch( () => setState({\r\n            loading: false,\r\n            error: 'No se cargo la info',\r\n            data: null,\r\n            offset: 0\r\n        }) );\r\n        \r\n    }, [url]);\r\n    \r\n    return [ state, setState ];\r\n\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { pokemonContext } from \"../../context/Context\";\r\nimport { requestFilters } from \"../../helpers/requestFilters\";\r\nimport { useFetch } from \"../../helpers/useFetch\";\r\n\r\nimport \"./custom.css\";\r\n\r\nexport const Colors = () => {\r\n\r\n  const { dispatch, firstFilter, setFirstFilter } = useContext(pokemonContext);\r\n\r\n\r\n  const [ { data, loading } ] = useFetch(\r\n    `${process.env.REACT_APP_POKEMON_ENDPOINT}/pokemon-color`\r\n  );\r\n\r\n  const handleColor = async(e) => {\r\n\r\n    requestFilters( dispatch, { by: \"pokemon-color\", id: e.target.id, destruc: \"pokemon_species\", flag: firstFilter, setFirstFilter: setFirstFilter  } );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h5 className=\"m-2\">Colores</h5>\r\n      <div className=\"grid-colors m-2\">\r\n        {!loading &&\r\n          data.results.map(({ name }) => {\r\n            return (\r\n              <label\r\n                key={`customCheck-${name}`}\r\n                className=\"control control-checkbox\"                \r\n              >\r\n                <input id={name} type=\"checkbox\" onClick={ handleColor }/>\r\n                <div\r\n                  className=\"control_indicator\"\r\n                  style={{ backgroundColor: name }}\r\n                ></div>\r\n              </label>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { pokemonContext } from \"../../context/Context\";\r\nimport { requestFilters } from \"../../helpers/requestFilters\";\r\nimport { useFetch } from \"../../helpers/useFetch\";\r\n\r\nimport \"./custom.css\";\r\n\r\nexport const Filters = ({ typeForm = \"radio\", url = \"types\", title }) => {\r\n\r\n  const { dispatch, firstFilter, setFirstFilter } = useContext(pokemonContext);\r\n\r\n  const [ { data, loading } ] = useFetch(\r\n    `${process.env.REACT_APP_POKEMON_ENDPOINT}/${url}`\r\n  );\r\n\r\n  const handleCheck = async (e) => {\r\n    const by = typeForm === \"radio\" ? \"gender\" : \"type\";\r\n\r\n\r\n    if( by === \"gender\" ){\r\n      \r\n      requestFilters( dispatch, { by: by, id: e.target.id, destruc: \"pokemon_species_details\", proper: \"pokemon_species\", flag: firstFilter, setFirstFilter: setFirstFilter } );\r\n      \r\n    }else {\r\n\r\n      requestFilters( dispatch, { by: by, id: e.target.id, destruc: \"pokemon\", proper: \"pokemon\", flag: firstFilter, setFirstFilter: setFirstFilter } );\r\n\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h5 className=\"m-2\">{title}</h5>\r\n      <Form className=\"m-2\">\r\n        <div className={ typeForm === \"checkbox\" ? \"grid-form\" : null }>\r\n          {!loading &&\r\n            data.results.map(({ name }) => (\r\n              <Form.Check\r\n                onChange={ handleCheck }\r\n                type={typeForm}\r\n                key={`${typeForm}-${name}`}\r\n                name={typeForm}\r\n                id={name}\r\n                label={name}\r\n              />\r\n            ))}\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { Content } from '../../components/content/Content'\r\nimport { Colors } from '../../components/filters/Colors'\r\nimport { Filters } from '../../components/filters/Filters'\r\n\r\nimport \"./Principal.css\"\r\n\r\n\r\nexport const Principal = () => {\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={3} className=\"mt-3\">\r\n                    <div className=\"card-filters\">\r\n                        <div className=\"m-2\">\r\n                            <h4>Filtros</h4>\r\n                        </div>\r\n                        <Filters typeForm=\"checkbox\" url=\"type\" title=\"Tipos\" />                        \r\n                        <Colors />\r\n                        <Filters typeForm=\"radio\" url=\"gender\" title=\"Genero\" />\r\n                    </div>                    \r\n                </Col>\r\n                <Col md={9}>\r\n                        <Content />\r\n                </Col>\r\n            </Row>\r\n        </Container>                \r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.e57f7ae6.svg\";","export default __webpack_public_path__ + \"static/media/search.4dcfd518.svg\";","import React, { useContext } from 'react'\r\nimport { pokemonContext } from '../../context/Context'\r\nimport search from '../../icons/search.svg'\r\n// import { Navbar as Nav } from \"react-bootstrap\";\r\n\r\n\r\nexport const Search = () => {\r\n\r\n    const { dispatch } = useContext(pokemonContext)\r\n\r\n    const handleSearch = (e) => {\r\n        dispatch({\r\n            type: 'search',\r\n            payload:{\r\n                value: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        // <Nav.Collapse className=\"mr-auto\">\r\n            <a className=\"navbar-pointer ml-auto\" href=\"!#\" \r\n                onBlur={ e => { e.target.value = null; dispatch({ type: \"again\", payload: {} }) }} \r\n                onClick={ (e) => { e.preventDefault(); e.target.value = null } } \r\n                onChange={handleSearch}>\r\n\r\n                <img src={search} alt=\"search\"/>\r\n                <input type=\"search\" placeholder=\"search\"></input>\r\n                \r\n            </a> \r\n        // </Nav.Collapse>\r\n        // <div className=\"navbar-collapse collapse justify-content-end\">\r\n                               \r\n        // </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport logo from \"../../icons/logo.svg\";\r\nimport { Search } from \"./Search\";\r\nimport { Col, Container, Navbar, Row } from \"react-bootstrap\";\r\n\r\nimport \"./effects.css\";\r\n\r\nexport const NavbarComponent = () => {\r\n  return (\r\n    // <nav className=\"navbar navbar-expand-sm navbar-white bg-white\">\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Navbar expand=\"sm\">\r\n            <Navbar.Brand>\r\n              <img src={logo} alt=\"logo\" width=\"56\" />\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Collapse>\r\n              <Search />\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n\r\n    // </nav>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { Principal } from '../../views/principal/Principal'\r\nimport { NavbarComponent } from '../../components/navbar/NavbarComponent'\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <NavbarComponent />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={ Principal } />\r\n            </Switch>\r\n\r\n        </Router>\r\n    )\r\n}\r\n","// import { pokemon_entries } from \"./pokemon_storage\"\r\n\r\nexport const initialPokemons = ( pokemon_entries ) => {\r\n    let pokemons = [];\r\n\r\n      if( Array.isArray(pokemon_entries) ){\r\n\r\n        for (let index = 0; index < 20; index++) {   \r\n            pokemons = [ ...pokemons, pokemon_entries[index].pokemon_species ]\r\n          }\r\n      }       \r\n    \r\n    \r\n    return pokemons;\r\n}","import { useState } from \"react\";\r\nimport { initialPokemons } from \"./initialPokemons\";\r\n\r\n\r\nexport const reducer = (state = [], action) =>{\r\n\r\n\r\n    switch (action.type) {\r\n        case \"start\":\r\n            const { pokemon_entries } =  JSON.parse(localStorage.getItem('pokemons')) || [ { pokemons_species: [] } ]\r\n            \r\n            const initial = initialPokemons(pokemon_entries)\r\n\r\n            return [\r\n                ...initial\r\n            ]\r\n\r\n        case \"load\":\r\n            \r\n            return [\r\n                ...state,\r\n                ...action.payload.pokemons\r\n            ]\r\n        case \"search\":\r\n                        \r\n            const foundPokemon = state.filter( ( pokemon ) => ( Object.values(pokemon).some( (val) => ( val.includes( action.payload.value ) ) ) ))\r\n            return foundPokemon;\r\n\r\n        case \"again\":\r\n\r\n            return initialPokemons();\r\n        \r\n        case \"filter\":   \r\n            \r\n            if( action.payload.flag < 1 && action.payload.filters.length !== 0 ){\r\n                state = [ ]\r\n            }\r\n\r\n            if (action.payload.filters.length !== 0) {\r\n                state = [ ...state, ...action.payload.filters ]\r\n                \r\n                const filters = state.filter( (v,i,a) => a.findIndex(t=>(t.name === v.name)) ===i );\r\n\r\n                return[           \r\n                    ...filters                    \r\n                ]\r\n            }else {\r\n                return [ ...state ]\r\n            }\r\n\r\n        case \"remove\":\r\n            return [\r\n                \r\n            ]                \r\n            \r\n\r\n        default:\r\n            break;\r\n    }\r\n}","import { useEffect, useReducer, useState } from \"react\";\nimport \"./App.css\";\nimport { AppRouter } from \"./components/router/AppRouter\";\nimport { pokemonContext } from \"./context/Context\";\nimport { initialPokemons } from \"./helpers/initialPokemons\";\nimport { reducer } from \"./helpers/reducer\";\nimport { useFetch } from \"./helpers/useFetch\";\n\nconst init = () => {\n  const initial = initialPokemons();\n\n  return initial || [];\n};\n\nfunction App() {\n  // petición para guardar datos de pokemons en localstorage\n  const [{ data }] = useFetch(`${process.env.REACT_APP_POKEMON_ENDPOINT}/pokedex/national`);\n\n  // permite ver el cargue de pokemons y de hacer las busquedas\n  const [state, dispatch] = useReducer(reducer, [], init);\n\n  //contador para borrar datos despues de seleccionar\n  const [firstFilter, setFirstFilter] = useState(0);\n\n  // para guardar en el localstorage\n  useEffect(() => {\n    if ( data !== null ) {\n      localStorage.setItem(\"pokemons\", JSON.stringify(data));\n    }\n\n    dispatch({\n      type: \"start\",\n      payload: {}\n    })\n\n  }, [data]);\n\n  return (\n      <pokemonContext.Provider value={{ state, dispatch, firstFilter, setFirstFilter }}>\n        <AppRouter />\n     </pokemonContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}